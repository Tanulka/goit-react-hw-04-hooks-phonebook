{"version":3,"sources":["components/Form/Form.module.css","components/App/App.module.css","components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","components/App/App.js","index.js","components/Contacts/Contacts.module.css"],"names":["module","exports","Form","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","contact","props","checkUser","alert","this","onSubmit","type","onChange","pattern","title","required","className","s","btn","Component","Contacts","contacts","deleteContact","map","item","id","onClick","Filter","filter","autoComplete","prototypes","PropTypes","string","isRequired","func","App","some","person","toLowerCase","uuidv4","console","log","prevState","includes","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.593ebc32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Form_btn__aasqa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\"};","import { Component } from 'react';\n\nimport s from './Form.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const contact = { ...this.state };\n    if (this.props.checkUser(contact)) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n    this.props.handleSubmit(contact);\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <section>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            <p>Name</p>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n          <label>\n            <p>Number</p>\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n\n          <button className={s.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nfunction Contacts({ contacts, deleteContact }) {\n  return (\n    <>\n      <ul>\n        {contacts.map(contact => (\n          <li className={s.item} id={contact.id} key={contact.id}>\n            <span className={s.contact}>\n              {contact.name} {contact.number}\n            </span>\n            <button\n              className={s.btn}\n              type=\"button\"\n              onClick={() => {\n                deleteContact(contact.id);\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contacts;\n","import PropTypes from 'prop-types';\n\nfunction Filter({ filter, handleChange }) {\n  return (\n    <label>\n      <p>Find contacts by name</p>\n      <input type=\"text\" name=\"search\" value={filter} onChange={handleChange} autoComplete=\"off\" />\n    </label>\n  );\n}\n\nFilter.prototypes = {\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport Form from '../Form/Form';\nimport Contacts from '../Contacts/Contacts.jsx';\nimport Filter from '../Filter/Filter.jsx';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  checkUser = contact => {\n    return this.state.contacts.some(person => person.name.toLowerCase() === contact.name.toLowerCase());\n  };\n\n  handleSubmit = contact => {\n    const { contacts } = this.state;\n\n    this.setState(\n      {\n        contacts: [\n          ...contacts,\n          {\n            id: uuidv4(),\n            ...contact,\n          },\n        ],\n      },\n      () => console.log(this.state),\n    );\n  };\n\n  handleChange = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  filter() {\n    const { filter, contacts } = this.state;\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  }\n\n  deleteContact = id => {\n    this.setState(prevState => ({ contacts: prevState.contacts.filter(contact => contact.id !== id) }));\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n\n    return (\n      <div className={s.container}>\n        <h1>Phonebook</h1>\n        <Form handleSubmit={this.handleSubmit} checkUser={this.checkUser} />\n        <h2>Contacts</h2>\n        <Filter handleChange={this.handleChange} value={filter} />\n\n        <Contacts contacts={filter ? this.filter() : contacts} deleteContact={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Contacts_btn__1JXXK\",\"item\":\"Contacts_item__n5e7y\",\"contact\":\"Contacts_contact__2vGSB\"};"],"sourceRoot":""}