{"version":3,"sources":["components/App/App.module.css","components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","components/App/App.js","index.js","components/Contacts/Contacts.module.css","components/Form/Form.module.css"],"names":["module","exports","Form","checkUser","handleSubmit","useState","name","setName","number","setNumber","clearForm","onInputChange","e","setter","target","value","onSubmit","preventDefault","contact","alert","type","onChange","pattern","title","required","className","s","btn","Contacts","contacts","deleteContact","map","item","id","onClick","Filter","filter","handleChange","autoComplete","prototypes","PropTypes","string","isRequired","func","App","setContacts","setFilter","useEffect","localStorage","getItem","parseContacts","JSON","parse","setItem","stringify","container","uuidv4","some","person","toLowerCase","console","log","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.116065e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Form.module.css';\n\nfunction Form({ checkUser, handleSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const contact = { name, number };\n\n    if (checkUser(contact)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    handleSubmit(contact);\n    clearForm();\n  };\n\n  const clearForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  function onInputChange(e, setter) {\n    setter(e.target.value);\n  }\n\n  return (\n    <section>\n      <form onSubmit={onSubmit}>\n        <label>\n          <p>Name</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={e => onInputChange(e, setName)}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          <p>Number</p>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={e => onInputChange(e, setNumber)}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n        <button className={s.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </section>\n  );\n}\n\nForm.propTypes = {\n  checkUser: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nfunction Contacts({ contacts, deleteContact }) {\n  return (\n    <>\n      <ul>\n        {contacts.map(contact => (\n          <li className={s.item} id={contact.id} key={contact.id}>\n            <span className={s.contact}>\n              {contact.name} {contact.number}\n            </span>\n            <button\n              className={s.btn}\n              type=\"button\"\n              onClick={() => {\n                deleteContact(contact.id);\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contacts;\n","import PropTypes from 'prop-types';\n\nfunction Filter({ filter, handleChange }) {\n  return (\n    <label>\n      <p>Find contacts by name</p>\n      <input type=\"text\" name=\"search\" value={filter} onChange={handleChange} autoComplete=\"off\" />\n    </label>\n  );\n}\n\nFilter.prototypes = {\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport Form from '../Form/Form';\nimport Contacts from '../Contacts/Contacts.jsx';\nimport Filter from '../Filter/Filter.jsx';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './App.module.css';\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n\n  const [filter, setFilter] = useState('');\n\n  const checkUser = contact => {\n    return contacts.some(person => person.name.toLowerCase() === contact.name.toLowerCase());\n  };\n\n  const handleSubmit = contact => {\n    setContacts([...contacts, { id: uuidv4(), ...contact }]);\n  };\n\n  const handleChange = e => {\n    setFilter(e.target.value);\n  };\n\n  const filtrate = () => {\n    console.log('filter: ', filter);\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  const deleteContact = id => {\n    setContacts(contacts.filter(contact => contact.id !== id));\n  };\n\n  useEffect(() => {\n    const contacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contacts);\n    if (parseContacts) {\n      setContacts(parseContacts);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <Form handleSubmit={handleSubmit} checkUser={checkUser} />\n      <h2>Contacts</h2>\n      <Filter handleChange={handleChange} value={filter} />\n\n      <Contacts contacts={filter ? filtrate() : contacts} deleteContact={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Contacts_btn__1JXXK\",\"item\":\"Contacts_item__n5e7y\",\"contact\":\"Contacts_contact__2vGSB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Form_btn__aasqa\"};"],"sourceRoot":""}